var documenterSearchIndex = {"docs":
[{"location":"#NahaXMLUtils","page":"Home","title":"NahaXMLUtils","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for NahaXMLUtils.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"#NahaXMLUtils.bounds_to_viewbox-Tuple{Bounds}","page":"Home","title":"NahaXMLUtils.bounds_to_viewbox","text":"bounds_to_viewbox(::Bounds)\n\nReturns a vector of Pairs which provide the viewBox, width and height attributes to elt for an svg element.\n\n\n\n\n\n","category":"method"},{"location":"#NahaXMLUtils.elt-Tuple{Function, AbstractString, Vararg{Any}}","page":"Home","title":"NahaXMLUtils.elt","text":"elt(f, tagname::AbstractString, things...)\nelt(tagname::AbstractString, things...)\n\nReturn an XML element.  f is called with a single argument: either an XML.AbstractXMLNode or a Pair describing an XML attribute to be added to the resulting element.\n\nEach of things is either an XML.AbstractXMLNode or a Pair describing an XML attribute to be added to the resulting element.\n\nEach of things, and whatever f is called on are added to the new XML element.\n\nAn argument could also be either a string or a number, in which case it is included as text content.\n\nIf an argument is an AbstractDict then each entry is added as an attribute.\n\n\n\n\n\n","category":"method"},{"location":"#NahaXMLUtils.svgval","page":"Home","title":"NahaXMLUtils.svgval","text":"svgval(value)\n\nreturn a representation of value that can appear in SVG code.\n\n\n\n\n\n","category":"function"}]
}
